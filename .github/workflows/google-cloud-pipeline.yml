name: Build and deploy to GKE

on:
  push:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: View working folder content.
        run: ls -lah

      - name: Authenticate in Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: 'gcloud info:'
        run: gcloud info

      - name: Configure Docker to use the gcloud command-line tool as a credential helper for authentication
        run: gcloud --quiet auth configure-docker

      - name: Get the GKE credentials, so we can deploy to the cluster
        run: gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      - name: Build the frontend Docker image
        run: |-
          docker build --tag "gcr.io/$PROJECT_ID/todo-frontend:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" src/main/frontend

      - name: Publish the frontend Docker image to Google Container Registry
        run: |-
          docker push "gcr.io/$PROJECT_ID/todo-frontend:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"

      - name: Install JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: 18
          distribution: 'temurin'
          cache: gradle

      - name: Build backend image with Gradle JIB task
        run: |-
          ./gradlew jib --no-daemon -Djib.to.image="gcr.io/$PROJECT_ID/todo-backend:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Install SOPS editor of encrypted files
        run: |-
          curl -O -L -C - https://github.com/mozilla/sops/releases/download/v3.7.3/sops-v3.7.3.linux
          sudo mv sops-v3.7.3.linux /usr/bin/sops
          sudo chmod +x /usr/bin/sops

      - name: Deploy to the GKE cluster
        run: |-
          echo "go to manifests folder"
          cd manifests/GKE/
          
          echo "create namespace"
          kubectl apply -f namespace.yml
          
          echo "export private key"
          export SOPS_AGE_KEY=${{ secrets.SOPS_AGE_PRIVATE_KEY_FOR_SECRET_MANIFEST }}
          
          echo "decrypt  and apply secret"
          sops --decrypt secret.enc.yml | kubectl apply -f -
          
          echo "launch postgres"
          kubectl apply -f postgres.yml
          
          echo "set backend image name"
          kustomize edit set image backend-image=gcr.io/$PROJECT_ID/todo-backend:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
          
          echo "set frontend image name"
          kustomize edit set image frontend-image=gcr.io/$PROJECT_ID/todo-frontend:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
          
          echo 'Kustomize build output: '
          kustomize build
          
          echo "deploy kustomized frontend and backend"
          kustomize build | kubectl apply -f -
          
          echo "deploy ingress"
          kubectl apply -f ingress.yml
          
          echo "start cronjob generating todos"
          kubectl apply -f todo-cronjob.yml
          
          # todo - do not hardcode namespace "devops"
          echo "wait for success postgres deployment"
          kubectl rollout status statefulset postgres-ss -n devops
          
          echo "wait for success backend deployment"
          kubectl rollout status deployment todo-app-back-deployment -n devops
          
          echo "wait for success frontend deployment"
          kubectl rollout status deployment todo-app-front-deployment -n devops
          
          echo "view deployed services"
          kubectl get services -o wide -n devops
